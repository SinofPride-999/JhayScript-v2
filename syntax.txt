initiate    ===    variable declaration
bankai      ===    print call
function    ===    function declaration


built in functions
PRINT
PRINT_RET
    - (print return instead of printing to the screen, it would return the value that is being printed)
INPUT
    - (input for string inputs)
INPUT_INT
    - (input int for integer inputs)
CLEAR
    - (would clear the screen)
IS_NUMBER
    - (checks if element is a number)
IS_STRING
    - (checks if element is a string)
IS_LIST
    - (checks if element is a list)
IS_FUNCTION
    - (checks if element is a fuction)
APPEND
    - (add element to a list, mutable)
POP
    - (remove an element from a list, also mutable)
EXTEND
    - (concatinates two lists together, also mutable)


I am thinking of adding:
    - File Management functions
    - Math functions (sqrt, round, pow, add, sub, div, mult, )


# PURE SYNTAX ==========================
# PRINT STATEMENTS ====
PRINT("Hello")
PRINT("WORLD")


# IF-STATEMENTS ====
# One-liner
IF <condition-expression> THEN <execution-expression>   

# Multi-liner
IF <condition-expression> THEN
    <execution-expression1>
    <execution-expression2>
    <execution-expression3>
END

# FOR-LOOPS ====
# One-liner
FOR i = 0 TO 10 THEN <execution-expression>   
# Optional one-liner to include STEP
FOR i = 0 TO 10 STEP 2 THEN <execution-expression>

# Multi-liner
FOR i = 0 TO 10 THEN
    <execution-expression1>
    <execution-expression2>
    <execution-expression3>
END


# FUNCTIONS ====
# One-liner
FUN <function-name>() -> <execution-expression>

# Multi-liner
FUN <name>()
    <execution-expression1>
    <execution-expression2>
    <execution-expression3>
END
